# render.yaml — Django API on Render (lean, pinned Python, safe build)
# - Installs from requirements-render.txt (not requirements.txt)
# - Pins Python 3.11 for wide package support
# - Health-checks /api/ and runs migrate right before serving traffic

databases:
  - name: royalroad-db
    plan: basic-256mb
    databaseName: royalroad
    user: royalroad

services:
  - type: web
    name: royalroad-api
    runtime: python
    plan: starter
    autoDeploy: true
    healthCheckPath: /api/

    buildCommand: |
      pip install -r requirements-render.txt
      # Ensure Django loads prod settings during collectstatic
      export DJANGO_SETTINGS_MODULE=royalroad_clone.settings_prod
      python manage.py collectstatic --no-input

    # Run DB migrations in the runtime environment (recommended)
    preDeployCommand: |
      python manage.py migrate

    # Bind to Render's assigned PORT on 0.0.0.0 (required)
    startCommand: gunicorn royalroad_clone.wsgi:application --bind 0.0.0.0:$PORT

    envVars:
      # Pin interpreter on Render (Blueprints support this env var)
      - key: PYTHON_VERSION
        value: "3.11.11"

      # Use production settings
      - key: DJANGO_SETTINGS_MODULE
        value: royalroad_clone.settings_prod

      # Wire Postgres URL from the managed database
      - key: DATABASE_URL
        fromDatabase:
          name: royalroad-db
          property: connectionString

      # Generate a strong secret in Render
      - key: SECRET_KEY
        generateValue: true

      # Allow Render subdomains; add custom domains later
      - key: ALLOWED_HOSTS
        value: ".onrender.com"

      # Django requires full scheme for trusted origins over HTTPS
      - key: CSRF_TRUSTED_ORIGINS
        value: "https://*.onrender.com"

      # Small instance → 1–2 workers is fine
      - key: WEB_CONCURRENCY
        value: "2"
